@model ApplicationSecurityApp.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2>Login</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form id="loginForm" asp-action="Login" method="post">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" autocomplete="off" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" autocomplete="off" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-check">
        <input asp-for="RememberMe" class="form-check-input" />
        <label asp-for="RememberMe" class="form-check-label">Remember Me</label>
    </div>

    <input type="hidden" id="g-recaptcha-response" name="ReCaptchaToken" />

    @if (ViewData["Requires2FA"] != null)
    {
        <div class="alert alert-info">
            <p>A verification code has been sent to your registered device.</p>
        </div>
    }

 
    <button type="submit" id="loginButton" class="btn btn-primary mt-3">Login</button>

    <p><a href="@Url.Action("ForgotPassword", "Account")">Forgot Password?</a></p>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="https://www.google.com/recaptcha/api.js?render=6LfJjtMqAAAAAHQ9K009AZ2CqlNxgF1BOdN6Ja5l"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const loginForm = document.getElementById("loginForm");
            const loginButton = document.getElementById("loginButton");

            loginForm.addEventListener("submit", function (event) {
                event.preventDefault(); // Stop form submission

                loginButton.disabled = true; // Prevent multiple submissions

                grecaptcha.ready(function () {
                    grecaptcha.execute("6LfJjtMqAAAAAHQ9K009AZ2CqlNxgF1BOdN6Ja5l", { action: "login" }).then(function (token) {
                        document.getElementById("g-recaptcha-response").value = token;
                        loginForm.submit(); // ✅ Submit the form after getting the token
                    }).catch(function (error) {
                        console.error("reCAPTCHA error:", error);
                        alert("reCAPTCHA verification failed. Please try again.");
                        loginButton.disabled = false; // Re-enable button on failure
                    });
                });
            });
        });
    </script>
}
